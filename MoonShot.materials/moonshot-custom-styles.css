.blockquote {
  /* Looks nice for a quote, and mimics other interpreters. */
  font-family: monospace;

  /* Offsets the block from the page. */
  background-color: aliceblue;
  border: 2px ridge grey;

  /* Makes the border stay back from the edge of the text, which is nice. */
  padding: 0.5em;

  /* Vorpal is creating a span for this, but to have the border and background
   * work the way we want, we style it as a block. */
  display: block;
}

.continue {
  background-color: khaki;
  padding: 0.5em;
}

.room-heading {
  font-weight: bold;
  background-color: lavender;
}

/* Other room names, not in the heading that describes the current room. */
:not(.room-heading) > .room-name {
  font-weight: bold;
  background-color: lavenderblush;
}

.direction-name {
  font-weight: bold;
  background-color: lavenderblush;
}

.hint {
  font-style: italic;
  background-color: linen;
}

.plaque-card {
  /* Offsets the block from the page. */
  background-color: palegoldenrod;
  border: 2px ridge grey;

  /* Makes the border stay back from the edge of the text, which is nice. */
  padding: 0.5em;

  /* Vorpal is creating a span for this, but to have the border and background
   * work the way we want, we style it as a block or inline-block.  Using
   * inline-block makes it hug the text, which I like better for the plaque. */
  display: inline-block;
}

.nameplate-card {
  /* Offsets the block from the page. */
  background-color: palegoldenrod;
  border: 2px ridge grey;

  /* Makes the border stay back from the edge of the text, which is nice. */
  padding: 0.5em;

  /* Vorpal is creating a span for this, but to have the border and background
   * work the way we want, we style it as a block.  Using inline-size: fit
   * makes it hug the text, and margin centers it. */
  display: block;
  inline-size: fit-content;
  margin: 0 auto;
}

.nameplate-card:first-line {
  font-family: cursive;
}

.ending-card {
  /* Offsets the block from the page. */
  background-color: mediumspringgreen;
  border: 2px ridge grey;

  /* Makes the border stay back from the edge of the text, which is nice. */
  padding: 0.5em;

  /* Vorpal is creating a span for this, but to have the border and background
   * work the way we want, we style it as a block or inline-block.
   * Even worse, there is some bug in which trying to center the content in
   * Inform causes the generated HTML to be all screwy, with the ending-card
   * empty and the text outside it.  Ugh.
   * So, to solve all that, we use block to take up the whole line, inline-size
   * to shrink the background to the content, and margin to center it all. */
  display: block;
  inline-size: fit-content;
  margin: 0 auto;
}

/* https://www.fontspace.com/kbkinderwrite-font-f15885 */
@font-face {
  font-family: 'KBKinderWrite';
  src: local('KBKinderWrite'),
       url('KBKinderWrite.woff') format('woff'),
       url('KBKinderWrite.woff2') format('woff2');
  font-weight: normal;
  font-style: normal;
}

.checklist-block {
  /* Make it stand out, and look like paper. */
  display: block;
  background-color: aliceblue;
  border: 1px solid black;

  /* Fit to content. */
  inline-size: fit-content;

  /* Unless the content is larger 30 characters or so. */
  max-width: 30em;

  /* Add padding around the contents. */
  padding: 2em;
}

.checklist-contents {
  /* The story says it's "scribbled out in childish print", so let's emulate
   * that as much as we can. */

  /* A really childish, hand-written-looking font. */
  font-family: 'KBKinderWrite', cursive;
  font-weight: bold;
  font-size: 130%;
}

.personnel-file-card {
  /* Make this look more like a typed document on yellowish paper. */

  display: block;
  background-color: lightyellow;
  font-family: monospace;
  border: 1px solid darkgrey;

  font-size: 75%;
  max-width: 24em;
  padding: 2em;
}

/* Though I can't figure out why, Inform/Vorple creates an empty span of this
 * class before the one with the content.  This hides it. */
.personnel-file-card:empty {
  display: none;
}

/* Text indentation in Inform sucks and is hard to figure out.  Do it in CSS
 * instead, which sucks slightly less. */
.personnel-file-card span {
  display: block;  /* Or else text-indent doesn't work */
  margin-left: 3.2em;  /* Indents all text */
  text-indent: -3.2em;  /* Unindents the first line by the same amount */
}

/* This will be used to highlight interesting words in room descriptions in
 * easy mode. */
body.difficulty-easy .interesting-highlight,
#settings-card .interesting-highlight {
  background-color: paleturquoise;
}

/* Don't highlight within the checklist. */
.checklist-contents .interesting-highlight {
  background-color: transparent;
}

img.unicorn {
  content: url(unicorn.jpg);
  /* Center it. */
  display: flex;
  margin: 0 auto;
}

/* Based on https://codepen.io/thetypebeast/pen/KWNGGd by Jennifer */
body.lsd::before {
  content: ""; /* required for ::before */
  position: fixed; /* don't scroll with page */
  z-index: -100; /* place behind elements on page */
  /* fill the page */
  width: 100%;
  height: 100%;
  /* fill the background with a gradient */
  background-image:
      radial-gradient(circle farthest-side at top right, transparent, #def),
      radial-gradient(ellipse farthest-corner at 0% 100%, transparent, #fed);
  animation: lsd-bg-change 3s infinite;
}
@keyframes lsd-bg-change {
  0%, 100% {
    filter: hue-rotate(0deg);
  }
  50% {
    filter: hue-rotate(-180deg);
  }
}

/* https://www.1001fonts.com/lovecrafts-diary-font.html */
@font-face {
  font-family: 'LovecraftsDiary';
  src: local('LovecraftsDiary'),
       url('LovecraftsDiary.woff') format("woff"),
       url('LovecraftsDiary.woff2') format("woff2");
  font-weight: normal;
  font-style: normal;
}

/* The alien paper uses this strange font.  Can also be applied to body.*/
.alien-paper {
  font-family: 'LovecraftsDiary';
}
/* This is explicitly the paper. */
span.alien-paper {
  /* Make it stand out, and look like paper. */
  display: block;
  background-color: aliceblue;
  border: 1px solid black;

  /* Fit to content. */
  inline-size: fit-content;

  /* Unless the content is larger 30 characters or so. */
  max-width: 30em;

  padding: 1em;
}

/* Though I can't figure out why, Inform/Vorple creates an empty span of this
 * class before the one with the content.  This hides it. */
span.alien-paper:empty {
  display: none;
}

/* When the whole page is in alien paper mode, the alien paper reads in plain
 * English. */
body.alien-paper .alien-paper {
  font-family: 'Roboto', sans-serif;
}

.script-page {
  /* Make it stand out, and look like paper. */
  display: block;
  background-color: aliceblue;
  border: 1px solid black;
  padding: 1em;
  margin: 1em;

  /* Max out at 30 characters or so. */
  max-width: 30em;

  /* TODO: find a typewriter font to replace monospace? */
  font-family: monospace;
}

.script-line {
  padding: 0 7em;
  display: block;
}

/* Sometimes, when a command results in lots of text, it is difficult to find
 * your last command to start reading.  This makes it stand out some. */
.lineinput {
  background-color: #eee;
}

ul.inventory {
  /* The UA default is to have top & bottom margins, but I like the list to
   * look more compact in inventory. */
  margin: 0;
}

/* The form containing the input field and auto-complete. */
#lineinput {
  position: relative;
}

/* The auto-complete elements, positioned in an overlay over the input field. */
#auto-complete {
  position: absolute;
  display: none;
}

body {
  position: relative;
}

.hidden {
  display: none !important;
}

.floating-button {
  width: 2em;
  height: 2em;
  border-radius: 50%;
  font-weight: bold;
  padding: 0;

  background: powderblue;
  cursor: pointer;

  /* This really matters in Tauri.  In Chrome, the default is fine. */
  border: 2px solid black;
}

.floating-button img {
  height: 1em;
  vertical-align: middle;
}

.floating-button-text {
  height: 2em;
  border-radius: 0.2em;
  font-weight: bold;

  background: powderblue;
  cursor: pointer;
}

.floating-button:active {
  background: turquoise;
}

.popup-container {
  /* Position in the middle of the page, overlaying everything else. */
  position: fixed;
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;

  display: flex;
  align-items: center;
  justify-content: center;

  /* Place a scrim behind the card */
  background: radial-gradient(black, transparent);

  /* Place the card container above the "uiblock" used during pause. */
  z-index: 123456789;
}

.popup {
  /* Offsets the block from the page. */
  border: 2px ridge grey;

  /* Makes the border stay back from the edge of the text, which is nice. */
  padding: 0.5em;

  /* Limit the size of the card. */
  max-width: 800px;
  max-height: 80vh;
  max-width: calc(min(100vw - 6em, 800px));
  max-height: calc(100vh - 6em);
  margin: 3em;

  /* Scroll if needed, otherwise, no scroll bar. */
  overflow-y: auto;

  /* Set background. */
  background-color: aliceblue;

  /* Allow positioning elements within the popup. */
  position: relative;
}

.popup p {
  /* Keep the paragraph margins the same on all sides. */
  margin: 1rem;
}

.popup p.title {
  font-size: 200%;
  font-weight: bold;
}

.popup-close {
  float: right;
  margin: 1em;
}

#help-button {
  position: fixed;
  right: 2em;
  top: 2em;
}

#map-button {
  position: fixed;
  right: 2em;
  top: 5em;
}

#settings-button {
  position: fixed;
  right: 2em;
  top: 8em;
}

#help-card p, #help-card li {
  /* Space out the help to make it easier to read. */
  word-spacing: 0.15em;
  line-height: 1.5;
}

#help-card li.top {
  margin-top: 1em;
}

#help-card tt {
  background: seashell;
  border: 1px inset lightgray;
  padding: 0 0.3em;
}

#map-card .popup-close {
  position: absolute;
  right: 1em;
  top: 1em;
}

#settings-card label {
  /* Override the haven default for labels */
  background: none;
}

#settings-card label,
#settings-card input {
  /* Space these apart a bit */
  display: block;
  margin: 1em;
}

.toggle {
  /* Hide the actual toggle, but give it space. */
  appearance: none;
  position: relative;
  display: inline-block;
  box-sizing: content-box;
  width: 4.5em;
  height: 2em;
  padding: 0.2em;
  border: none;
  border-radius: 1.5em;
  overflow: hidden;

  /* Make it clickable still. */
  cursor: pointer;

  /* Background when off. */
  background-color: dimgray;

  /* Animate! */
  transition: background ease 0.3s;
}

.toggle:checked {
  /* Background when on. */
  background-color: forestgreen;
}

.toggle:before {
  /* A label, "on" or "off". */
  content: "on off";
  display: block;
  position: absolute;
  z-index: 2;
  width: 2em;
  height: 2em;
  line-height: 2em;
  font-family: 'Roboto';
  font-weight: bold;
  text-transform: uppercase;

  /* Space it so that only one label shows at a time. */
  text-indent: -2em;
  word-spacing: 2.55em;
  white-space: nowrap;

  /* The color and shape of the ball. */
  background: #fff;
  border-radius: 50%;

  /* The color of the label. */
  color: #fff;

  /* Make the text pop a bit. */
  text-shadow: -1px -1px rgba(0,0,0,0.15);

  /* Animate! */
  transition: transform cubic-bezier(0.3, 1.5, 0.7, 1) 0.3s;
}

.toggle:checked:before {
  /* Move everything over. */
  transform: translateX(2.5em);
}
