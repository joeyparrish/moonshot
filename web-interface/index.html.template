<!DOCTYPE html>
<html lang="en">
  <head>
    <title>[TITLE]</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <meta name="author" content="[AUTHOR]">
    <link rel="icon" type="image/png" href="Icon.png">
    <link rel="stylesheet" href="roboto.css">
  
    <link rel="stylesheet" href="interpreter/jquery.powertip.css">
    <link rel="stylesheet" href="interpreter/toastr.css">
    <link rel="stylesheet" href="interpreter/vex.css">
    <link rel="stylesheet" href="interpreter/vex-theme-plain.css">
  
    <link rel="stylesheet" href="interpreter/haven.css">
    <link rel="stylesheet" href="interpreter/vorple.css">
  
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="game-style.css">
  
    <script src="music.js"></script>
    <script src="pause.js"></script>
    <script src="events.js"></script>
    <script src="popups.js"></script>
    <script src="auto-complete.js"></script>
    <script src="textarea-caret.min.js"></script>
    <script src="interpreter/vorple.min.js"></script>
    <script src="interpreter/[TITLE_FILENAME].gblorb.js"></script>
  
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=[GA_KEY]"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', '[GA_KEY]');
    </script>
    <script>
      // Prevent the right-click context menu in desktop bundles.
      if (window.__TAURI__) {
        document.addEventListener('contextmenu', event => event.preventDefault());
      }
  
      // Set Quixe (interpreter) options so that it doesn't change the page title.
      game_options = {
        set_page_title: false,
      };

      const play = () => {
        // Hide the splash screen.
        document.body.classList.add('play');

        if (document.getElementById('vorple') == null) {
          // Disable debugging features, then initialize Vorple.
          vorple.debug.off();
          vorple.init();
        }
      };
  
      document.addEventListener('DOMContentLoaded', () => {
        // Move on after 18 seconds, or a click, or escape, or enter.
        // The CSS fade-in/fade-out animations last 17s total.
        setTimeout(play, 18000);
        document.addEventListener('click', play);
        document.addEventListener('keypress', (event) => {
          if (event.key === "Escape" || event.key === "Enter") {
            play();
          }
        });
      });
    </script>
  </head>

  <body>
    <div id="splash">
      <div class="logo fade-in-fade-out">
        <img src="Chicken-Noodle-Soap.jpg" alt="Chicken Noodle Soap">
      </div>
      <div class="cover fade-in-fade-out">
        <img src="Cover.jpg" alt="[TITLE]">
        <div class="covertext">
          <div class="author">[COPYRIGHT]</div>
          <div class="version">Version [RELEASE]</div>
          <!-- The Inform 7 license requires some form of attribution: -->
          <div class="inform">Created with Inform 7</div>
        </div>
      </div>
    </div>

    <audio id="backgroundMusic"></audio>
  
    <div id="menus">
      <!-- These are hidden by default, but we start with a pause.  When the initial "title" pause ends, these will be shown. -->
      <button
          id="help-button" data-popup-container-id="help-card-container"
          class="popup-open floating-button hidden" title="help"><img src="help-icon.png" alt="help"></button>
      <button
          id="map-button" data-popup-container-id="map-card-container"
          class="popup-open floating-button hidden" title="map"><img src="map-icon.png" alt="map"></button>
      <button
          id="settings-button" data-popup-container-id="settings-card-container"
          class="popup-open floating-button hidden" title="settings"><img src="settings-icon.png" alt="settings"></button>
  
      <div id="help-card-container" class="hidden popup-container">
        <div id="help-card" class="popup">
          <button class="popup-close floating-button" title="close">X</button>
          <p class="title">Help!</p>
  
          <p>
            Not sure how to play?  That's understandable.  This style of text adventure game was popular in the 1980's, but isn't so common now.  We'll help you get started.
          </p>
  
          <p>
            The game is a story, and you are the main character!  Simply type what you want to do.  For example, you can <tt>look</tt> to see what's in the room, you can <tt>examine</tt> a thing to look more closely at it (such as <tt>examine clock</tt>), you can <tt>take</tt> certain objects, and you can move <tt>east</tt>, <tt>west</tt>, etc. to move from room to room.
          </p>
  
          <p>
            To get the most out of this story, you should explore and talk to people (<tt>ask about ...</tt>) and look closely at objects of interest (<tt>examine ...</tt>)
          </p>
  
          <p>
            The game won't understand every possible sentence, so here is a quick guide to the commands and patterns you should know.  Some commands have single-letter aliases you can use (shown here in parentheses):
          </p>
  
          <ul>
            <li class="top">
              <b>Moving</b>
              <ul>
                <li>east (e) / west (w) / north (n) / south (s)</li>
                <li>down (d) / up (u)</li>
                <li>map</li>
                <li>wait (z)</li>
              </ul>
            </li>
  
            <li class="top">
              <b>Searching</b>
              <ul>
                <li>look (l) / look at ...</li>
                <li>examine (x) ...</li>
                <li>inventory (i)</li>
              </ul>
            </li>
  
            <li class="top">
              <b>Objects</b>
              <ul>
                <li>take ... / take all</li>
                <li>give ... / give ... to ...</li>
                <li>drop ...</li>
                <li>open ...</li>
                <li>drink ... / eat ...</li>
              </ul>
            </li>
  
            <li class="top">
              <b>People</b>
              <ul>
                <li>talk / talk to ...</li>
                <li>ask about ... / ask ... about ...</li>
                <li>wake ...</li>
                <li>apologize / apologize to ...</li>
              </ul>
            </li>
  
            <li class="top">
              <b>Game</b>
              <ul>
                <li>help</li>
                <li>options</li>
                <li>save / restore</li>
                <li>quit (q)</li>
              </ul>
            </li>
          </ul>
  
          <p>
            These are the most important things for this game, but feel free to use your imagination and see what happens!
          </p>
  
          <button class="popup-close floating-button-text">Close Help</button>
          <p>
            <b><i>Enjoy!</i></b>
          </p>
        </div>
      </div>
  
      <div id="map-card-container" class="hidden popup-container">
        <div id="map-card" class="popup">
          <button class="popup-close floating-button" title="close">X</button>
          <img src="Map.svg">
        </div>
      </div>
  
      <div id="settings-card-container" class="hidden popup-container">
        <div id="settings-card" class="popup">
          <button class="popup-close floating-button" title="close">X</button>
  
          <label for="music-toggle">
            Music:
              <span id="noMusic">none currently playing</span>
              <a id="backgroundMusicLink" target="_blank">Current background music <span id="backgroundMusicCredit"></span></a>
          </label>
          <input id="music-toggle" class="toggle" type="checkbox"
              data-settings-key="chicken-noodle-soap--music"
              onapply="backgroundMusic.muted = !event.target.checked;">

          <label for="easy-mode-toggle">
            Easy mode: <span class="interesting-highlight">highlight text</span> you should pay attention to
          </label>
          <input id="easy-mode-toggle" class="toggle" type="checkbox"
              data-settings-key="chicken-noodle-soap--easy-mode"
              onapply="document.body.dataset.difficulty = event.target.checked ? 'easy' : 'medium';">

          <label for="auto-complete-toggle">
            Auto-complete: offer suggestions of verbs, objects, people, and topics based on context
          </label>
          <input id="auto-complete-toggle" class="toggle" type="checkbox"
              data-settings-key="chicken-noodle-soap--auto-complete"
              onapply="document.body.dataset.autoComplete = event.target.checked;">
        </div>
      </div>

    </div>
  </body>
</html>
